# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="tonotdo" # set by `omz`

ZSH_THEME=""

color_normal='%f'
color_error='%F{red}'
color_user='%F{#087fff}'
color_host='%F{#1eb980}'
color_sep='%F{#b15dff}'
color_prompt='%F{#ff3399}'
color_time='%F{#555555}'
color_virtualenv='%F{#ff8C00}'
color_branch_dirty='%F{#fec20f}'
color_branch_clean='%F{#96c93c}'
color_path=$color_normal

prompt_char='$'
prompt_userhost_sep='@'


export VIRTUAL_ENV_DISABLE_PROMPT=1
function virtualenv_prompt {
  if [[ -n "$VIRTUAL_ENV" ]]; then
    local venv_name="${VIRTUAL_ENV##*/}"
    echo "%F{#555555}(${color_virtualenv}${venv_name}%F{#555555})${color_normal} "
  fi
}

function git_status_prompt() {
  if git rev-parse --is-inside-work-tree &>/dev/null; then

    local branch dirty staged untracked ahead behind output

    local color_branch=$color_branch_clean
    branch=$(git symbolic-ref --short HEAD 2>/dev/null || git rev-parse --short HEAD 2>/dev/null)

    output=$(git status --porcelain=v2 --branch 2>/dev/null)

    # ahead/behind info
    ahead=$(echo "$output" | sed -n 's/^# branch.ab +\([0-9]*\) -[0-9]*/\1/p')
    behind=$(echo "$output" | sed -n 's/^# branch.ab +[0-9]* -\([0-9]*)\)/\1/p')

    staged=$(echo "$output" | grep '^1 ' | wc -l | tr -d ' ')
    dirty=$(echo "$output" | grep '^2 ' | wc -l | tr -d ' ')
    untracked=$(echo "$output" | grep '^? ' | wc -l | tr -d ' ')

    # Check for a clean working tree
    if [[ $dirty -eq 0 && $staged -eq 0 ]]; then
        color_branch=$color_branch_clean  # Clean repo → green
    else
        color_branch=$color_branch_dirty  # Dirty repo → gray
    fi

    local git_status=""

    [[ $ahead -gt 0 ]]      && git_status+=" ↑${ahead}"
    [[ $behind -gt 0 ]]     && git_status+=" ↓${behind}"
    [[ $staged -gt 0 ]]     && git_status+=" ${color_error}+${staged}${color_normal}"
    [[ $dirty -gt 0 ]]      && git_status+=" ${color_error}+${dirty}${color_normal}"
    # [[ $untracked -gt 0 ]]  && git_status+=" ✖$untracked "

    [[ -z "$git_status" ]]  && git_status=" ✔"  # clean working tree

    echo "%F{#555555}[${color_branch}$branch${color_normal}${git_status}%F{#555555}]${color_normal}"
  fi
}

PROMPT='${color_user}%n${color_sep}${prompt_userhost_sep}${color_host}%m${color_normal} %~ $(git_status_prompt)
$(virtualenv_prompt)${color_prompt}${prompt_char}${color_normal} '


ZLE_RPROMPT_INDENT=0
RPROMPT='${color_time}%D{%H:%M:%S}${color_normal}'

export CLICOLOR=1
export LSCOLORS=ex
export LS_COLORS="di=34:ex=31"
alias ll="ls -alG"

zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git fzf zsh-autosuggestions zsh-syntax-highlighting)


source $ZSH/oh-my-zsh.sh

# User configuration
ZSH_HIGHLIGHT_STYLES[command]='fg=33'
ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=82'
ZSH_HIGHLIGHT_STYLES[unknown-token]='fg=red'


# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
